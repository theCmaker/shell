#! /bin/bash

install_kate ()
{
  read -p "Voulez-vous installer kate ? (o/N) " kateEn
  case $kateEn in
  [oO]) read -p "Voulez-vous installer kate en français ? (O/n) " kateFr
        case $kateFr in
        [oO]) sudo apt-get install language-pack-kde-fr; sudo apt-get install kate;;
        '') sudo apt-get install language-pack-kde-fr; sudo apt-get install kate;;
        [nN]) sudo apt-get install kate;;
        esac
        echo "Kate a été installé.";;
  '') return 0;;
  [nN]) return 0;;
  esac
  return 0
}

install_latex ()
{
  read -p "Voulez-vous installer LaTeX ? (o/N) " latexfull
  case $latexfull in
  [oO]) sudo apt-get install texlive-full;;
  '') return 0;;
  [nN]) return 0;;
  esac
  echo "LaTeX a été installé."
  return 0
}

install_aptfile ()
{
  read -p "Voulez-vous installer apt-file ? (o/N) " aptfile
  case $aptfile in
  [oO]) sudo apt-get install apt-file;;
  '') return 0;;
  [nN]) return 0;;
  esac
  echo "apt-file a été installé."
  return 0
}

set_vbox_rights ()
{
  echo "ATTENTION, ces modifications requièrent un système sous VirtualBox et que des dossiers partagés soient créés."
  read -p "Voulez-vous régler les droits pour le partage de dossier VirtualBox ? (o/N) " vbox
  case $vbox in
  [oO]) sudo usermod -a -G vboxsf `whoami` ; sudo chgrp -R vboxsf /media/sf* ;;
  '') return 0;;
  [nN]) return 0;;
  esac
  echo "Droits modifiés."
  echo "alias echange='cd /media/sf*'">> ~/.bashrc
  echo -e "La commande echange a été créée, elle vous renvoie vers le dossier d'échange.\nLe terminal devra être relancé pour commencer à l'utiliser."
  sleep 3
  return 0
}

install_emacs ()
{
  read -p "Voulez-vous installer emacs ? (o/N) " emacss
  case $emacss in
  [oO]) sudo apt-get install emacs;;
  '') return 0;;
  [nN]) return 0;;
  esac
  echo "Emacs a été installé."
  return 0
}

install_tuareg ()
{
  read -p "Voulez-vous installer le mode tuareg (OCaml) pour Emacs ? (o/N) " tuaregmode
  case $tuaregmode in
  [oO]) i=`pwd`; 
    cd /tmp; 
    wget -q http://www-rocq.inria.fr/~acohen/tuareg/mode/tuareg-mode.tar.gz; 
    tar xvzf tuareg-mode.tar.gz; 
    mkdir -p ~/.emacs.d/tuareg; 
    cp ./tuareg*/*.el ~/.emacs.d/tuareg; 
    echo -e ';;; ocaml-mode\n\n;;; étendre le chemin de recherche\n(setq load-path (cons (expand-file-name "~/.emacs.d/tuareg") load-path))\n\n;;; charger un bout de code tout prêt (on peut aussi le recopier ici)\n(load (expand-file-name "~/.emacs.d/tuareg/append-tuareg"))"'>~/.emacs ; 
    cd $i;;
  '') return 0;;
  [nN]) return 0;;
  esac
  echo "Le mode tuareg pour Emacs a été installé."
  return 0
}

install_manpagesfr ()
{
  read -p "Voulez-vous installer les pages du manuel en français ? (o/N) " manpagesfr
  case $manpagesfr in
  [oO]) sudo apt-get install manpages-fr-dev manpages-fr-extra;;
  '') return 0;;
  [nN]) return 0;;
  esac
  echo "Les pages françaises du manuel ont été installées."
  return 0
}

install_git ()
{
  read -p "Voulez-vous installer Git ? (o/N) " gitinst
  case $gitinst in
  [oO]) sudo apt-get install git;;
  '') return 0;;
  [nN]) return 0;;
  esac
  echo "Git a été installé."
  return 0
}

install_cmake ()
{
  read -p "Voulez-vous installer Cmake ? (o/N) " cmakeinst
  case $cmakeinst in
  [oO]) sudo apt-get install cmake;;
  '') return 0;;
  [nN]) return 0;;
  esac
  echo "Cmake a été installé."
  return 0
}

install_header ()
{
  read -p "Voulez-vous installer le créateur de headers en langage C ? (o/N) " header
  case $header in
  [oO]) i=`pwd`;
    cd /tmp;
    wget -q https://raw.github.com/theCmaker/shell/master/header;
    chmod 755 header;
    mv header /usr/bin/;
    echo "alias header='/usr/bin/header">> ~/.bashrc;
    cd $i;;
  '') return 0;;
  [nN]) return 0;;
  esac
  echo -e "La commande header a été créée.\nLe terminal devra être relancé pour commencer à l'utiliser."
  return 0
}

install_prepro ()
{
  read -p "Voulez-vous installer le créateur de fichiers source vierges en langage C ? (o/N) " prepro
  case $prepro in
  [oO]) i=`pwd`;
    cd /tmp;
    wget -q https://raw.github.com/theCmaker/shell/master/prepro;
    chmod 755 prepro;
    mv prepro /usr/bin/;
    echo "alias prepro='/usr/bin/prepro">> ~/.bashrc;
    cd $i;;
  '') return 0;;
  [nN]) return 0;;
  esac
  echo -e "La commande prepro a été créée.\nLe terminal devra être relancé pour commencer à l'utiliser."
  return 0
}


menu ()
{
  echo -e "--------------------------------------------\nChoisissez ce que vous voulez installer
  1. Editeur de texte kate,
  2. LaTeX,
  3. Gestionnaire apt-file,
  4. [VIRTUAL OS ONLY] Accès au(x) dossier(s) de partage de VirtualBox,
  5. Editeur de texte emacs,
  6. Mode tuareg pour Emacs (OCaml),
  7. Pages de manuel en français,
  8. Git,
  9. Cmake,
 10. Créateur de headers en langage C,
 11. Créateur de fichiers source vierges en langage C,
  x. Tout installer [Système Virtuel],
  y. Tout installer [Système Natif],
  z. Quitter."
  read -p "Votre reponse : " i
  echo "--------------------------------------------"

  case $i in 
  '1') install_kate;; 
  '2') install_latex;; 
  '3') install_aptfile;;
  '4') set_vbox_rights;;
  '5') install_emacs;;
  '6') install_tuareg;;
  '7') install_manpagesfr;;
  '8') install_git;;
  '9') install_cmake;;
  '10') install_header;;
  '11') install_prepro;;
  'x') install_kate; install_latex; install_aptfile; set_vbox_rights; install_emacs; install_tuareg; install_manpagesfr; install_git; install_cmake; install_header; install_prepro;;
  'y') install_kate; install_latex; install_aptfile; install_emacs; install_tuareg; install_manpagesfr; install_git; install_cmake; install_header; install_prepro;;
  'z') exit;; 
  *) echo "Mauvaise réponse."; menu ;; 
  esac

  menu
}

echo "Bonjour."
menu